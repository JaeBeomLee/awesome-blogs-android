apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.jakewharton.hugo'
apply plugin: 'io.fabric'
apply plugin: 'jacoco-android'

repositories {
    maven { url 'https://jitpack.io' }
    maven { url 'https://maven.fabric.io/public' }
    maven { url 'https://github.com/linchaolong/stetho-realm/raw/master/maven-repo' }
    mavenCentral()
}

buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'com.jakewharton.hugo:hugo-plugin:1.2.1'
        classpath 'io.fabric.tools:gradle:1.22.1'
    }
}

def gitSha() {
    def p = 'git rev-parse --short HEAD'.execute([], project.rootDir)
    p.waitFor()
    if (p.exitValue() != 0) {
        return 'None'
    }
    return p.text.trim()
}

def gitTimestamp() {
    def p = 'git log -n 1 --format=%at'.execute([], rootDir)
    p.waitFor()
    if (p.exitValue() != 0) {
        return 0
    }
    return p.text.trim()
}

android {
    compileSdkVersion 25
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId 'org.petabytes.awesomeblogs'
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 19
        versionName "1.9"
        buildConfigField 'String', 'GIT_SHA', "\"${gitSha()}\""
        buildConfigField 'long', 'GIT_TIMESTAMP', "${gitTimestamp()}L"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }
    signingConfigs {
        release {
            storeFile file(String.valueOf(System.getenv("KEYSTORE")))
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEY_ALIAS")
            keyPassword System.getenv("KEY_PASSWORD")
        }
    }
    flavorDimensions "default"
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            applicationIdSuffix '.debug'
            testCoverageEnabled false
        }
        release {
            debuggable false
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            setProperty("archivesBaseName", "awesomeBlogs-${defaultConfig.versionName}-${defaultConfig.versionCode}")
        }
    }
    productFlavors {
        staging {
            applicationId 'org.petabytes.awesomeblogs.staging'
        }
        production {
            applicationId 'org.petabytes.awesomeblogs'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dexOptions {
        jumboMode true
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':api')
    compile project(':coordinator')
    compile project(':remark')
    compile project(':markDownView')
    compile project(':slidingMenu')
    compile rootProject.ext.support_design
    compile rootProject.ext.firebase_core
    compile rootProject.ext.firebase_auth
    compile rootProject.ext.firebase_messaging
    compile rootProject.ext.support_customtabs
    compile rootProject.ext.play_services_auth
    compile rootProject.ext.iab
    compile rootProject.ext.alerter
    compile rootProject.ext.flipboard_bottomsheet
    compile rootProject.ext.rxpreferences
    compile rootProject.ext.rxrelay
    compile rootProject.ext.calligraphy
    compile rootProject.ext.spinkit
    compile rootProject.ext.smoothprogressbar
    compile rootProject.ext.verticalviewpager
    compile rootProject.ext.topsnackbar
    compile rootProject.ext.crashlytics
    compile(rootProject.ext.crashlytics) {
        transitive = true;
    }

    annotationProcessor rootProject.ext.butterknife_compiler

    debugCompile rootProject.ext.stetho
    debugCompile rootProject.ext.stetho_realm

    testCompile rootProject.ext.junit
    testCompile rootProject.ext.assertj
    androidTestCompile(rootProject.ext.support_espressocore, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
}
apply plugin: 'com.google.gms.google-services'